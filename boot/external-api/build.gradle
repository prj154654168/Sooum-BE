plugins {
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
}

group = 'com.sooum'
version = '0.0.1-SNAPSHOT'


configurations {
    asciidoctorExt
}
jar { enabled = false }

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':data:core-data')
    implementation project(':cloud')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.slack.api:slack-api-client:1.44.1'

    // MySQL spatial
    implementation 'org.hibernate:hibernate-spatial:6.1.7.Final'

    //hateoas
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'com.google.firebase:firebase-admin:9.4.1'

    implementation 'org.springframework.retry:spring-retry'

    // mapStruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //restDocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    sources { // 특정 파일만 html로 만든다.
        include("**/index.adoc")
    }
    baseDirFollowsSourceFile()
    dependsOn test
}

bootJar {
    enabled = true
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}"){
        into 'static/docs'
    }
}