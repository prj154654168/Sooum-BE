plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sooum'
version = '0.0.1-SNAPSHOT'

bootJar { enabled = false }
jar { enabled = true }

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

subprojects {

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor "org.projectlombok:lombok:1.18.26"
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor "org.projectlombok:lombok:1.18.26"
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		// test
		testImplementation"org.springframework.boot:spring-boot-starter-test"
//		testImplementation(platform("org.junit:junit-bom:_"))
//		testImplementation("org.junit.jupiter:junit-jupiter")
	}
}

tasks.named('test') {
	useJUnitPlatform()
//	systemProperty "jwt.key", project.getProperty("jwt.key")
//	systemProperty "jwt.refresh.expiration", project.getProperty("jwt.refresh.expiration")
//	systemProperty "jwt.access.expiration", project.getProperty("jwt.access.expiration")
//	systemProperty 'spring.datasource.url', project.getProperty("spring.datasource.url")
//	systemProperty 'spring.datasource.username', project.getProperty("spring.datasource.username")
//	systemProperty 'spring.datasource.password', project.getProperty("spring.datasource.password")
//	systemProperty 'sooum.server.ip', project.getProperty("sooum.server.ip")
//	systemProperty 'sooum.server.img.path', project.getProperty("sooum.server.img.path")
//	systemProperty 'spring.data.redis.port', project.getProperty("spring.data.redis.port")
//	systemProperty 'spring.data.redis.host', project.getProperty("spring.data.redis.host")
//	systemProperty 'cloud.aws.s3.credentials.accessKey', project.getProperty("cloud.aws.s3.credentials.accessKey")
//	systemProperty 'cloud.aws.s3.credentials.secretKey', project.getProperty("cloud.aws.s3.credentials.secretKey")
//	systemProperty 'cloud.aws.rekognition.credentials.accessKey', project.getProperty("cloud.aws.rekognition.credentials.accessKey")
//	systemProperty 'cloud.aws.rekognition.credentials.secretKey', project.getProperty("cloud.aws.rekognition.credentials.secretKey")
}
